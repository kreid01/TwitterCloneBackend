// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TwitterCloneBackend.Context;

#nullable disable

namespace TwitterCloneBackend.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221106124932_11")]
    partial class _11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentCount")
                        .HasColumnType("integer");

                    b.Property<int>("LikeCount")
                        .HasColumnType("integer");

                    b.Property<List<int>>("LikedBy")
                        .HasColumnType("integer[]");

                    b.Property<DateTime?>("PostDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PostMedia")
                        .HasColumnType("text");

                    b.Property<string>("PostTextBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PosterId")
                        .HasColumnType("integer");

                    b.Property<int>("RetweetCount")
                        .HasColumnType("integer");

                    b.Property<List<int>>("RetweetedBy")
                        .HasColumnType("integer[]");

                    b.Property<string>("UserAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserImg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("TwitterCloneBackend.Models.Comments.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CommentBody")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CommentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CommentMedia")
                        .HasColumnType("text");

                    b.Property<int>("PostId")
                        .HasColumnType("integer");

                    b.Property<int?>("PosterId")
                        .HasColumnType("integer");

                    b.Property<string>("UserAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserImg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<List<int>>("Followers")
                        .HasColumnType("integer[]");

                    b.Property<List<int>>("Following")
                        .HasColumnType("integer[]");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserAt")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserCoverImg")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserImg")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("boolean");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TwitterCloneBackend.Models.Comments.Comment", b =>
                {
                    b.HasOne("Post", null)
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
